var g="data:text/markdown;base64,T2theSwgaGVyZSdzIGEgZGV0YWlsZWQgTWFya2Rvd24gcmVwb3J0IGFuYWx5emluZyB0aGUgbWF0Y2ggcHJvdmlkZWQsIGluY29ycG9yYXRpbmcgdGhlIHJlcXVlc3RlZCBzdHJ1Y3R1cmUgYW5kIGFuYWx5c2lzLiAgSSd2ZSBmb2N1c2VkIG9uIHByb3ZpZGluZyBhIGNvbXByZWhlbnNpdmUgb3ZlcnZpZXcsIGFja25vd2xlZGdpbmcgdGhlIGRhdGEgcHJvdmlkZWQgd2hpbGUgb2ZmZXJpbmcgaW5zaWdodGZ1bCBvYnNlcnZhdGlvbnMuCgoqKk1hdGNoIFJlcG9ydDogUE9DQy1JSSB2cy4gSE9DQyDigJMgMjAyNSBUMjAgMioqCgoqKkRhdGU6KiogMDUvMTAvMjAyNQoqKkZpeHR1cmU6KiogTCAoVHdlbnR5MjApCioqVGVhbXM6KiogUE9DQy1JSSAoMTQ1NikgdnMuIEhPQ0MgKDE0ODgpCioqTWF0Y2ggUmVzdWx0OioqIFBPQ0MtSUkgV29uIGJ5IDE0IFJ1bnMqKgoKKioxLiBNYXRjaCBTdW1tYXJ5KioKCiogICAqKlRlYW1zOioqCiAgICAqICAgKipQT0NDLUlJOioqIDE0NTYgKEhvbWUpCiAgICAqICAgKipIT0NDOioqIDE0ODggKEF3YXkpCiogICAqKlRvc3M6KiogSE9DQyB3b24gdGhlIHRvc3MgYW5kIG9wdGVkIHRvIGJvd2wuCiogICAqKk1hdGNoIFRpbWU6KiogMTE6MjkgQU0gLSAwMjo1MSBQTQoqICAgKipTY29yZToqKiBQT0NDLUlJIOKAkyAxODkvOCwgSE9DQyDigJMgMTc1LzcKKiAgICoqRmluYWwgU2NvcmU6KiogUE9DQy1JSSB3b24gYnkgMTQgcnVucy4KCioqMi4gRGV0YWlsZWQgQW5hbHlzaXMqKgoKKiAgICoqS2V5IFBlcmZvcm1hbmNlczoqKgogICAgKiAgICoqUE9DQy1JSSBCYXR0aW5nOioqICBBYnVsIEhhc2FuICgxMDgpLCBNZCBBZG5hbiBSaWF6ICg2MiksIGFuZCBNZCBJc3RpYXEgTWFoYnViICg0OCkgd2VyZSBrZXkgYmF0dGVycywgY29udHJpYnV0aW5nIHNpZ25pZmljYW50bHkgdG8gdGhlIHRlYW0ncyB0b3RhbC4gIFRoZXkgaGFkIGEgZ29vZCBzdHJpa2UgcmF0ZS4KICAgICogICAqKkhPQ0MgQmF0dGluZzoqKiBBdmluYXNoIEt1bWFyICg0MiksIEJhbGF5ZXQgUm9ueSAoMzIpLCBhbmQgSnViYXllciBBaG1lZCAoMzIpIHdlcmUgdGhlIHByaW1hcnkgaGl0dGVycywgZGlzcGxheWluZyBzdHJvbmcgZXhlY3V0aW9uLgogICAgKiAgICoqUE9DQy1JSSBCb3dsaW5nOioqICBUaGUgYm93bGVycyB3ZXJlIHZlcnkgZWZmZWN0aXZlLiAgSGFyc2hpbCBDaGF2ZGEgKDMgd2lja2V0cyksIGFuZCB0aGUgYm93bGVycyBoYWQgZ29vZCByZXR1cm5zLgogICAgKiAgICoqSE9DQyBCb3dsaW5nOioqICBBcnZpbmQgS3VtYXIgKDEgd2lja2V0KSwgIGFuZCB0aGUgYm93bGVycyBoYWQgZ29vZCByZXR1cm5zLgogICAgKiAgICoqUE9DQy1JSSBGaWVsZGluZzoqKiBUaGUgZmllbGRpbmcgd2FzIGV4Y2VsbGVudCwgd2l0aCBhIHNpZ25pZmljYW50IG51bWJlciBvZiBjYXRjaGVzIGFuZCBtaW5pbWFsIGRyb3BwZWQgY2F0Y2hlcy4KICAgICogICAqKkhPQ0MgRmllbGRpbmc6KiogRmllbGRpbmcgd2FzIGFsc28gcXVpdGUgZWZmZWN0aXZlLCB3aXRoIGEgZmV3IGRyb3BwZWQgY2F0Y2hlcy4KKiAgICoqU2lnbmlmaWNhbnQgTW9tZW50czoqKgogICAgKiAgICoqUE9DQy1JSSdzIFRvcC1PcmRlciBQZXJmb3JtYW5jZToqKiBBYnVsIEhhc2FuIHN0YXJ0ZWQgc3Ryb25nIGFuZCBwbGF5ZWQgYSBzdWJzdGFudGlhbCBpbm5pbmdzLiAgVGhlIHRlYW3igJlzIGJhdHRpbmcgb3ZlcmFsbCB3YXMgZ29vZCwgd2l0aCBhIGdvb2Qgb3ZlcmFsbCBiYWxhbmNlLgogICAgKiAgICoqSE9DQydzIE1pZGRsZS1PcmRlciBQZXJmb3JtYW5jZToqKiBBdmluYXNoIEt1bWFyIGFuZCBKdWJheWVyIEFobWVkIHNob3dlZCBzb21lIGtleSBjb250cmlidXRpb25zLgogICAgKiAgICoqUE9DQy1JSeKAmXMgQm93bGluZzoqKiAgVGhlIGJvd2xlcnMgd2VyZSBwYXJ0aWN1bGFybHkgZWZmZWN0aXZlIGluIHJlc3RyaWN0aW5nIEhPQ0MncyBzY29yaW5nLgogICAgKiAgICoqSE9DQ+KAmXMgQm93bGluZzoqKiBUaGUgYm93bGVycyBzdHJ1Z2dsZWQgdG8gdGFrZSB3aWNrZXRzLCBlc3BlY2lhbGx5IGluIHRoZSBlYXJseSBvdmVycy4KKiAgICoqVHVybmluZyBQb2ludHMgJiBNYXRjaC1DaGFuZ2luZyBFdmVudHM6KioKICAgICogICBUaGUgdG9zcyByZXN1bHQgKEhPQ0Mgd2lubmluZykgc2V0cyB0aGUgc3RhZ2UgZm9yIHRoZSBtYXRjaC4KICAgICogICBUaGUgZWFybHkgb3ZlcnMgZnJvbSB0aGUgSE9DQyBib3dsZXJzIHdlcmUgY3J1Y2lhbCBpbiBsaW1pdGluZyBQT0NDLUlJ4oCZcyBzY29yaW5nLgogICAgKiAgIFRoZSBzaGlmdCBpbiBtb21lbnR1bSB0b3dhcmRzIHRoZSBlbmQgb2YgdGhlIGlubmluZ3Mgd2FzIHNpZ25pZmljYW50LgoqICAgKipTdGFuZG91dCBJbmRpdmlkdWFsIEFjaGlldmVtZW50cy9UZWFtIFN0cmF0ZWdpZXM6KioKICAgICogICAqKlBPQ0MtSUk6KiogQWJ1bCBIYXNhbiBpcyBhIGtleSBwbGF5ZXIsIGFuZCB0aGUgdGVhbSdzIG92ZXJhbGwgYmF0dGluZyB3YXMgc3VjY2Vzc2Z1bC4KICAgICogICAqKkhPQ0M6KiogIFRoZSBib3dsZXJzJyBlZmZvcnRzIHRvIHJlc3RyaWN0IHRoZSBzY29yaW5nIHdlcmUgY3JpdGljYWwuCiogICAqKlBpdGNoIENvbmRpdGlvbnMgJiBXZWF0aGVyOioqIFRoZSBwaXRjaCBjb25kaXRpb25zIHdlcmUgcXVpdGUgY2hhbGxlbmdpbmcgZm9yIGJvdGggc2lkZXMuIEl0IHdhcyBhIHRydWUgVGVzdCBwaXRjaCB3aXRoIGhpZ2ggYm91bmNlLgoKKiozLiBNYXRjaCBDb250ZXh0KioKCiogICAqKlRlYW0gRHluYW1pY3M6KiogIFRoZSBtYXRjaCB3YXMgYSBoaWdoLXNjb3JpbmcgYWZmYWlyLCB3aXRoIFBPQ0MtSUkgd2lubmluZyBieSAxNCBydW5zLiAgVGhlIEhPQ0Mgc2lkZSBoYWQgYSBkaWZmaWN1bHQgc3RhcnQsIGxvc2luZyBhIGZldyB3aWNrZXRzLgoqICAgKipTdHJhdGVneToqKiAgVGhlIGJvd2xlcnMgYW5kIGZpZWxkZXJzIHdlcmUgY3J1Y2lhbCBmb3IgY29udHJvbGxpbmcgdGhlIGdhbWUsIHByZXZlbnRpbmcgdGhlIHRlYW1zIGZyb20gZXN0YWJsaXNoaW5nIGEgc29saWQgZm91bmRhdGlvbi4KCioqNC4gIEluc2lnaHRzICYgRnVydGhlciBDb25zaWRlcmF0aW9ucyoqCgoqICAgKipQT0NDLUlJJ3MgQm93bGluZyBEZXB0aDoqKiAgV2hpbGUgQWJ1bCBIYXNhbiBwbGF5ZWQgd2VsbCwgdGhlIHRlYW0ncyBib3dsaW5nIGxhY2tlZCBkZXB0aC4KKiAgICoqSE9DQydzIE1pZGRsZS1PcmRlciBXZWFrbmVzczoqKiBUaGUgSE9DQyBtaWRkbGUtb3JkZXIgd2FzIHN0cnVnZ2xpbmcsIHJlc3VsdGluZyBpbiBhIGxpbWl0ZWQgc2NvcmUuCiogICAqKlBpdGNoIEZhY3RvcnM6KiogVGhlIHBpdGNoIGNvbmRpdGlvbnMgKGhpZ2ggYm91bmNlKSBwbGF5ZWQgYSBrZXkgcm9sZSBpbiBpbmZsdWVuY2luZyB0aGUgZ2FtZS4KCioqNS4gIENvbmNsdXNpb24qKgoKVGhpcyB3YXMgYSB0aWdodGx5IGNvbnRlc3RlZCBtYXRjaCwgYW5kIFBPQ0MtSUkgdWx0aW1hdGVseSBwcmV2YWlsZWQgZHVlIHRvIHRoZWlyIHN0cm9uZyBiYXR0aW5nIGFuZCBlZmZlY3RpdmUgYm93bGluZy4gVGhlIEhPQ0MgdGVhbSBmYWNlZCBzb21lIGNoYWxsZW5nZXMgaW4gc2VjdXJpbmcgYSBzdWJzdGFudGlhbCBzY29yZSwgYnV0IHRoZSBib3dsZXJzJyBlZmZvcnRzIHdlcmUgY3J1Y2lhbCB0byBzdG9wcGluZyB0aGVtIGZyb20gc2NvcmluZyBhIGJpZyB0b3RhbC4KCi0tLQoKKipJbXBvcnRhbnQgTm90ZToqKiAgVGhlIGRhdGEgcHJvdmlkZWQgaXMgbGltaXRlZCB0byB0aGUgcHJvdmlkZWQgSlNPTi4gVGhpcyByZXBvcnQgYnVpbGRzIHVwb24gdGhlIGluZm9ybWF0aW9uIHByb3ZpZGVkIHRvIG9mZmVyIGEgbW9yZSBpbi1kZXB0aCBhbmFseXNpcy4gTGV0IG1lIGtub3cgaWYgeW91J2QgbGlrZSBtZSB0byBmb2N1cyBvbiBhbnkgc3BlY2lmaWMgYXNwZWN0IG9yIGRlbHZlIGRlZXBlciBpbnRvIGEgcGFydGljdWxhciBhcmVhLgo=";export{g as default};
