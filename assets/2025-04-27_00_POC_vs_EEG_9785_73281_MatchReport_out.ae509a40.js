var g="data:text/markdown;base64,T2theSwgaGVyZeKAmXMgYSBkZXRhaWxlZCBtYXRjaCByZXBvcnQgYmFzZWQgb24gdGhlIHByb3ZpZGVkIEpTT04gZGF0YSwgZm9ybWF0dGVkIGluIE1hcmtkb3duLCBpbmNvcnBvcmF0aW5nIHRoZSByZXF1ZXN0ZWQgc3RydWN0dXJlIGFuZCBhbmFseXNpcy4KCioqQ3JpY2tldCBNYXRjaCBSZXBvcnQg4oCTIEVDQy1JSSB2cy4gUE9DQyoqCgoqKk1hdGNoIFN1bW1hcnk6KioKCk9uIEFwcmlsIDI3LCAyMDI1LCBFQ0MtSUkgZmFjZWQgUE9DQyBpbiBhIHRocmlsbGluZyBUd2VudHkyMCAoVDIwKSBtYXRjaCBwbGF5ZWQgYXQgQVRWMTg3MyBOw7xybmJlcmcgKE5DQykuIEVDQy1JSSBiYXR0ZWQgZmlyc3QsIHNjb3JpbmcgMTAxIHJ1bnMgaW4gMTkuMSBvdmVycyB3aGlsZSBQT0ND4oCZcyBib3dsZXJzIHRvb2sgMTA2IHJ1bnMgaW4gMTIgb3ZlcnMuIEVDQy1JSSB0aGVuIHNjb3JlZCAxMDYgcnVucyBpbiAxMi4wIG92ZXJzLCBidXQgd2VyZSBkaXNtaXNzZWQgZm9yIDIgcnVucy4gUE9DQ+KAmXMgYm93bGVycyBjbGFpbWVkIDUgd2lja2V0cywgd2l0aCBhIHRvdGFsIG9mIDEwIHJ1bnMsIGFuZCAyIGNhdGNoZXMuIE92ZXJhbGwsIEVDQy1JSSB3b24gdGhlIG1hdGNoIGJ5IDggd2lja2V0cy4KCioqRGV0YWlsZWQgQW5hbHlzaXM6KioKCiogICAqKktleSBQZXJmb3JtYW5jZXM6KioKCiAgICAqICAgKipFQ0MtSUkgQmF0dGluZzoqKiBUaGUgRUNDLUlJIGJhdHRpbmcgbGluZXVwIHdhcyBjaGFyYWN0ZXJpemVkIGJ5IGNvbnNpc3RlbnQgb3V0cHV0LiBSb2hhbiBDaGhhZGhhICgxIHJ1bnMsIDAgd2lja2V0cykgYW5kIEFuaWtldCBWaWpheSBLYXNoaWthciAoMSBydW5zLCAwIHdpY2tldHMpIHdlcmUgdGhlIG1haW4gY29udHJpYnV0b3JzLiBUaGUgdGVhbeKAmXMgYmF0dGluZyBzdHJhdGVneSBsZWFuZWQgdG93YXJkcyBhIGJhbGFuY2VkIGFwcHJvYWNoLCB3aXRoIGNvbnRyaWJ1dGlvbnMgZnJvbSBtdWx0aXBsZSBiYXRzbWVuLgogICAgKiAgICoqUE9DQyBCb3dsaW5nOioqIFBPQ0MncyBib3dsZXJzIHByb3ZlZCB0byBiZSBlZmZlY3RpdmUsIGVzcGVjaWFsbHkgaW4gbWFpbnRhaW5pbmcgY29udHJvbCB0aHJvdWdob3V0IHRoZSBpbm5pbmdzLiAgVGhlIGJvd2xlcnMsIHBhcnRpY3VsYXJseSB0aGUgcmlnaHQgYXJtIG1lZGl1bSBwYWNlIGJvd2xlcnMsIHdlcmUgYWJsZSB0byBleHRyYWN0IHRoZWlyIHBhY2Ugd2l0aCBhIGdvb2QgYW1vdW50IG9mIG92ZXJzLiAgVGhlIHRlYW0ncyBjb3JlIGJvd2xpbmcgcGVyc29ubmVsIHNob3dlZCByZXNpbGllbmNlIGFuZCBhY2N1cmFjeSBpbiB0YWtpbmcgd2lja2V0cy4gTm90YWJsZSBwZXJmb3JtYW5jZXMgaW5jbHVkZWQgdGhlIGFsbC1yb3VuZGVycyBSYWphaW5kZXIsIGFuZCBBbmtpdCBhcyB3ZWxsIGFzIHRoZSB0aHJlZSBib3dsZXJzLgogICAgKiAgICoqRUNDLUlJIEZpZWxkaW5nOioqIFRoZSBFQ0MtSUkgZmllbGRpbmcgc2VlbWVkIHRvIGJlIHJlbGF0aXZlbHkgc29saWQgdGhyb3VnaG91dCB0aGUgaW5uaW5ncywgc3VjY2Vzc2Z1bGx5IGNvdmVyaW5nIHRoZSBmaWVsZCBhcyB3ZWxsIGFzIGhvbGRpbmcgdGhlIGJhbGwgb24gdGhlIGdyb3VuZC4KCiogICAqKlNpZ25pZmljYW50IE1vbWVudHM6KioKCiAgICAqICAgVGhlIEVDQy1JSSB0ZWFtJ3Mgc2NvcmluZyByYXRlIHdhcyByZWxhdGl2ZWx5IGNvbnNpc3RlbnQgdGhyb3VnaCB0aGUgbWlkZGxlIG9mIHRoZSBpbm5pbmdzLCB3aGljaCBtYXkgaGF2ZSBiZWVuIGR1ZSB0byB0aGUgYmF0dGluZyBzdHlsZSBvZiB0aGVpciBwbGF5ZXJzLgogICAgKiAgIFRoZSBFQ0MtSUkgdGVhbeKAmXMgYmF0dGluZyBsaW5ldXAgd2FzIGNvbnNpc3RlbnQgd2l0aCB0aGUgcmVzdWx0cywgd2l0aCB0aGUgcGxheWVycyBtYWtpbmcgc29tZSBicmlsbGlhbnQgc2NvcmluZyBhdHRlbXB0cywgd2hpY2ggd2VyZSBhIGNyaXRpY2FsIGVsZW1lbnQgaW4gYWNoaWV2aW5nIHRoZSBzY29yZSBvZiAxMDEgaW4gMTkuMSBvdmVycy4KCiogICAqKlR1cm5pbmcgUG9pbnRzICYgTWF0Y2gtQ2hhbmdpbmcgRXZlbnRzOioqCgogICAgKiAgIFRoZSBFQ0MtSUkgdGVhbeKAmXMgc3RhcnQgd2FzIGNydWNpYWwgYXMgdGhlIGJhdHRpbmcgc2NvcmUgd2FzIG11Y2ggZmFzdGVyIHRoYW4gdGhhdCBvZiBQT0NDLgogICAgKiAgIFRoZSBib3dsZXJz4oCZIGVmZmVjdGl2ZW5lc3MgaW4gdGFraW5nIHdpY2tldHMgZHVyaW5nIHRoZSBQT0NDIGlubmluZ3Mgc2lnbmlmaWNhbnRseSBpbXBhY3RlZCB0aGUgbWF0Y2guCiAgICAqICAgVGhlIEVDQy1JSSdzIGJvd2xpbmcgY2hhbmdlIG1pZHdheSB0aHJvdWdoIHRoZSBpbm5pbmdzLCB0byBwcm92aWRlIGEgYmFsYW5jZWQgYXR0YWNrLCBjaGFuZ2VkIHRoZSBmbG93IG9mIHRoZSBtYXRjaC4KCiogICAqKlN0YW5kb3V0IEluZGl2aWR1YWwgQWNoaWV2ZW1lbnRzICYgVGVhbSBTdHJhdGVnaWVzOioqCgogICAgKiAgIFJvaGFuIENoaGFkaGEgd2FzIGV4Y2VwdGlvbmFsbHkgY29uc2lzdGVudCBhbmQgZGVsaXZlcmVkIGEgc2lnbmlmaWNhbnQgbnVtYmVyIG9mIHJ1bnMuCiAgICAqICAgVGhlIEVDQy1JSSB0ZWFtJ3MgYm93bGluZyBjaGFuZ2UgZHVyaW5nIHRoZSBQT0NDJ3MgaW5uaW5ncyB3YXMgYSBzdHJhdGVnaWMgbW92ZSwgcHJvdmlkaW5nIGEgdGFjdGljYWwgYWR2YW50YWdlLgoKKiAgICoqV2lubmVyICYgTG9zZXI6KioKCiAgICAqICAgRUNDLUlJIHdvbiB0aGUgbWF0Y2ggYnkgOCB3aWNrZXRzLCBwcm92aW5nIHRvIGJlIHRoZSBtb3JlIGNvbnNpc3RlbnQgdGVhbSBpbiB0aGlzIG1hdGNoLgoKKiAgICoqUGl0Y2ggQ29uZGl0aW9ucyAmIFdlYXRoZXI6KioKCiAgICAqICAgVGhlIHBpdGNoIGNvbmRpdGlvbnMgd2VyZSBzdWl0YWJsZSBmb3IgYm90aCBiYXR0aW5nIGFuZCBib3dsaW5nLiBJdCBoYWQgYSBnb29kIGFtb3VudCBvZiB2ZXJnaW5nIHJ1bi1zY29yaW5nLCB3aXRoIGEgZGVjZW50IGFtb3VudCBvZiBtb3ZlbWVudC4gSXQgYXBwZWFyZWQgdG8gYmUgYSBtaXhlZCBzdXJmYWNlLCB3aXRoIGEgZ29vZCBhbW91bnQgb2Ygc2VhbSBhbmQgc3BpbiBvbiBpdC4KCgoqKk1hdGNoIENvbnRleHQ6KioKCiogICAqKlRlYW1zOioqIEVDQy1JSSAoUE9DQykg4oCTIEEgY29tcGV0aXRpdmUgdGVhbSBzZWVraW5nIHRvIG1haW50YWluIHRoZWlyIHBvc2l0aW9uLgoqICAgKipUMjAgRm9ybWF0OioqIFRoZSBtYXRjaCB3YXMgcGxheWVkIGluIGEgVDIwIGZvcm1hdCwgZW1waGFzaXppbmcgZmFzdC1wYWNlZCBhY3Rpb24gYW5kIGFnZ3Jlc3NpdmUgYmF0dGluZy4KKiAgICoqQ29udGV4dHVhbCBOb3RlczoqKiAgVGhlIG1hdGNoIHdhcyBhIGhpZ2gtc3Rha2VzIGVuY291bnRlciwgd2l0aCBib3RoIHRlYW1zIGFpbWluZyBmb3IgYSBwb3NpdGl2ZSByZXN1bHQuCgoKKipBZGRpdGlvbmFsIE5vdGVzOioqCgoqICAgVGhlIG1hdGNoIHNjb3JlLCB3aGljaCB3YXMgYXQgMTAxLCBoYXMgYmVlbiBhIHNpZ25pZmljYW50IHBvaW50IG9mIGZvY3VzLgoKTGV0IG1lIGtub3cgaWYgeW914oCZZCBsaWtlIG1lIHRvIGVsYWJvcmF0ZSBvbiBhbnkgc3BlY2lmaWMgYXNwZWN0IG9mIHRoaXMgcmVwb3J0IG9yIGdlbmVyYXRlIGFkZGl0aW9uYWwgYW5hbHlzaXMgYmFzZWQgb24gYSBuZXcgZGF0YXNldCEK";export{g as default};
