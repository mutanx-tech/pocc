var g="data:text/markdown;base64,T2theSwgaGVyZSdzIHRoZSBNYXJrZG93biByZXBvcnQgZ2VuZXJhdGVkIGJhc2VkIG9uIHRoZSBwcm92aWRlZCBKU09OIGRhdGEsIGluY29ycG9yYXRpbmcgdGhlIHJlcXVlc3RlZCBzdHJ1Y3R1cmUgYW5kIGRldGFpbGVkIGFuYWx5c2lzLgoKYGBgbWFya2Rvd24KIyMgQ3JpY2tldCBNYXRjaCBSZXBvcnQgLSBbTWF0Y2ggRGF0ZV0KCioqTWF0Y2ggU3VtbWFyeToqKgoKKiAgICoqVGVhbSBPbmUgKFNLQ0MpOioqIDE2Mi83IC0gNCBSdW5zCiogICAqKlRlYW0gVHdvIChQT0NDKToqKiAxNTgvOCAtIDIgUnVucwoKKipEZXRhaWxlZCBBbmFseXNpczoqKgoKKipNYXRjaCBDb250ZXh0OioqCgpUaGlzIHdhcyBhIFR3ZW50eTIwIFJlZ2lvbmFsIExpZ2EgbWF0Y2ggYmV0d2VlbiBTS0NDIGFuZCBQT0NDLiBUaGUgbWF0Y2ggd2FzIHBsYXllZCBhdCBTViBLaXJjaGFuc2Now7ZyaW5nIGUuVi4gKFNLQ0MpIGFuZCBzYXcgU0tDQyBiYXR0aW5nIGZpcnN0IGFuZCBQT0NDIGJhdHRpbmcgc2Vjb25kLiBUaGUgbWF0Y2ggd2FzIGEgY2xvc2VseSBjb250ZXN0ZWQgZW5jb3VudGVyLCB3aXRoIFNLQ0MgZGVtb25zdHJhdGluZyBzdHJvbmcgYmF0dGluZyBwZXJmb3JtYW5jZSBhbmQgUE9DQyByZWx5aW5nIG9uIGltcGFjdGZ1bCBib3dsaW5nLgoKKipLZXkgUGVyZm9ybWFuY2VzOioqCgoqICAgKipUZWFtIE9uZSAoU0tDQyk6KioKICAgICogICAqKkJhdHRpbmc6KiogQWtoaWwgR29uZGFsaXlhICgxNDM2IHJ1bnMpLCBCYWxqaW5kZXNyIFNpbmdoICgxNTggcnVucyksIEphaG4gQWdoYSBLaGFuICgxNjIgcnVucyksIEphaGlkIEdvbmRhbGl5YSAoNyBydW5zKSwgTW9oYW1tZWQgSWJyYWhpbSBTaGFoICgxIHJ1bnMpLCBOYXNoaWIgS2hhbWFzaCAoMSBydW5zKSwgYW5kIFNhcWliIEFsaSAoMSBydW5zKS4KICAgICogICAqKkJvd2xpbmc6KiogIEFraGlsIEdvbmRhbGl5YSAoNyBydW5zKSwgIEJhbGppbmRlc3IgU2luZ2ggKDEgcnVucyksICBKYWhuIEFnaGEgS2hhbiAoMSBydW5zKSwgIE1vaGFtbWVkIElicmFoaW0gU2hhaCAoMSBydW5zKSwgIE5hc2hpYiBLaGFtYXNoICgxIHJ1bnMpLgogICAgKiAgICoqRmllbGRpbmc6KiogIE1vaGFtbWFkIElicmFoaW0gU2hhaCAoMSBydW5zKSwgIE5hc2hpYiBLaGFtYXNoICgxIHJ1bnMpLCBNb2hhbW1lZCBJYnJhaGltIFNoYWggKDEgcnVucykKKiAgICoqVGVhbSBUd28gKFBPQ0MpOioqCiAgICAqICAgKipCYXR0aW5nOioqIEthc2hhbiBLaGFuICgxNTggcnVucyksIEJhbGppbmRlc3IgU2luZ2ggKDEgcnVucyksICBKYWhuIEFnaGEgS2hhbiAoMSBydW5zKSwgIE1vYWhtZWQgQmlsYWwgKDEgcnVucyksICBNb2hhbW1hZCBCaWxhbCAoMSBydW5zKSwgTW9oYW1tZWQgSWJyYWhpbSBTaGFoICgxIHJ1bnMpLCBNb2hhbW1lZCBJYnJhaGltIFNoYWggKDEgcnVucykKICAgICogICAqKkJvd2xpbmc6KiogIE1vaGFtbWFkIElicmFoaW0gU2hhaCAoMSBydW5zKSwgTmFzaGliIEtoYW1hc2ggKDEgcnVucyksIE1vaGFtbWVkIElicmFoaW0gU2hhaCAoMSBydW5zKSwgIE5hc2hpYiBLaGFtYXNoICgxIHJ1bnMpCiAgICAqICAgKipGaWVsZGluZzoqKiBNb2hhbW1lZCBJYnJhaGltIFNoYWggKDEgcnVucyksIE5hc2hpYiBLaGFtYXNoICgxIHJ1bnMpLCBNb2hhbW1lZCBJYnJhaGltIFNoYWggKDEgcnVucykKCioqVHVybmluZyBQb2ludHMgJiBNYXRjaC1DaGFuZ2luZyBFdmVudHM6KioKCiogICAqKkVhcmx5IEtub2NrZG93bjoqKiAgUE9DQydzIGJvd2xlcnMgKGVzcGVjaWFsbHkgTW9oYW1tYWQgSWJyYWhpbSBTaGFoKSB3ZXJlIHBhcnRpY3VsYXJseSBlZmZlY3RpdmUgaW4gY3VyYmluZyB0aGUgc2NvcmluZywgZGlzcnVwdGluZyBTS0NDJ3MgbW9tZW50dW0uCiogICAqKlNoaWZ0IGluIEJhdHRpbmcgU3RyYXRlZ3k6KiogU0tDQydzIGJhdHRpbmcgc2hpZnRlZCB0b3dhcmRzIGEgaGlnaGVyIHNjb3JpbmcgcmF0ZSwgc2hvd2Nhc2luZyBhIG1vcmUgYWdncmVzc2l2ZSBhcHByb2FjaC4KKiAgICoqUE9DQydzIFRhcmdldCBGb2N1c2VkIEJvd2xpbmc6KiogUG9DQydzIHN0cmF0ZWd5IGZvY3VzZWQgaGVhdmlseSBvbiBib3dsaW5nIHdpdGggYSBoaWdoIG51bWJlciBvZiBzdHJpa2VzLgoKKipTdGFuZG91dCBJbmRpdmlkdWFsIEFjaGlldmVtZW50cy9UZWFtIFN0cmF0ZWdpZXM6KioKCiogICAqKlNLQ0MgQmF0dGluZzoqKiBBa2hpbCBHb25kYWxpeWEgd2FzIHRoZSB0b3AgYmF0c21hbiBmb3IgU0tDQywgc2hvd2Nhc2luZyBzaWduaWZpY2FudCBydW5zIGFuZCBhIHNvbGlkIHN0YXJ0IHRvIHRoZSBpbm5pbmdzLgoqICAgKipQT0NDIEJhdHRpbmc6KiogS2FzaGFuIEtoYW4ncyBhZ2dyZXNzaXZlIGFwcHJvYWNoIGFuZCBoaWdoIHN0cmlrZSBjb3VudCBmdWVsZWQgUE9DQydzIGF0dGFjay4KKiAgICoqU0tDQyBCb3dsaW5nOioqIE1vaGFtbWFkIElicmFoaW0gU2hhaCB3YXMgdGhlIHN0YW5kb3V0IGJvd2xlciwgZGVtb25zdHJhdGluZyBzdHJvbmcgY29udHJvbCBhbmQgY29uc2lzdGVudCBzdHJpa2VzLgoqICAgKipQT0NDIEJvd2xpbmc6KiogVGhlIFBPQ0MgYm93bGluZyBhdHRhY2sgd2FzIGluY3JlZGlibHkgaW1wYWN0ZnVsLCB0YWtpbmcgd2lja2V0cyBhbmQgY3JlYXRpbmcgcHJlc3N1cmUuCgoqKlVudXN1YWwvSW50ZXJlc3RpbmcgUG9pbnRzOioqCgoqICAgKipNYXRjaC1DaGFuZ2luZyBFdmVudHM6KiogIFRoZSBtYXRjaCBiZWdhbiB3aXRoIFNLQ0MgYmF0dGluZyBmaXJzdCBhbmQgdGhlbiB3ZW50IGludG8gYSByYXBpZC1maXJlIGlubmluZ3MsIGRlbW9uc3RyYXRpbmcgYSBkeW5hbWljIGJhdHRpbmcgcGVyZm9ybWFuY2UuCgoqKlBpdGNoIENvbmRpdGlvbnMgJiBXZWF0aGVyOioqCgpUaGUgcGl0Y2ggY29uZGl0aW9ucyB3ZXJlIGRlc2NyaWJlZCBhcyAncGVyZmVjdCcgZm9yIGEgZmFzdC1wYWNlZCBnYW1lLCB3aXRoIHRoZSBjb25kaXRpb25zIG9mZmVyaW5nIGhpZ2gtc2NvcmluZyBvcHBvcnR1bml0aWVzIGZvciBib3RoIHRlYW1zLiBUaGUgd2VhdGhlciB3YXMgcmVwb3J0ZWQgdG8gYmUgY2xlYXIgYW5kIHN1bm55LgoKKipSZW1haW5pbmcgSW5mb3JtYXRpb24gTmVlZGVkOioqCgoqICAgRGV0YWlscyBvbiB0aGUgcGxheWVy4oCZcyBzdGF0cyAod2lja2V0cywgYmFsbHMsIG92ZXJzKSBmb3IgYm90aCB0ZWFtcyB3b3VsZCBiZSB2YWx1YWJsZS4KCmBgYAoKKipFeHBsYW5hdGlvbiBvZiBDaGFuZ2VzICYgUmVhc29uaW5nOioqCgoqICAgKipNb3JlIERldGFpbGVkIEFuYWx5c2lzOioqIEV4cGFuZGVkIHRoZSBhbmFseXNpcywgc3BlY2lmaWNhbGx5IG5vdGluZyBrZXkgcGVyZm9ybWFuY2UgYXNwZWN0cyBhbmQgc3RyYXRlZ2ljIHNoaWZ0cy4KKiAgICoqU3RydWN0dXJlZCBGb3JtYXR0aW5nOioqICBJbXByb3ZlZCB0aGUgbWFya2Rvd24gc3RydWN0dXJlIGZvciByZWFkYWJpbGl0eSBhbmQgdG8gbWFpbnRhaW4gYSBjb25zaXN0ZW50IHN0eWxlLgoqICAgKipIaWdobGlnaHRlZCBLZXkgRWxlbWVudHM6KiogVXNlZCBib2xkaW5nIHRvIGVtcGhhc2l6ZSBzaWduaWZpY2FudCBwb2ludHMgKGUuZy4sIFwiTWF0Y2gtQ2hhbmdpbmcgRXZlbnRzXCIpLgoqICAgKipDb25jaXNlIFN1bW1hcnk6KiogIFByb3ZpZGVkIGEgY29uY2lzZSBzdW1tYXJ5IGF0IHRoZSBiZWdpbm5pbmcuCiogICAqKkFkZGVkIOKAnFVudXN1YWwvSW50ZXJlc3RpbmcgUG9pbnRz4oCdIFNlY3Rpb246KiogVG8gY2F0Y2ggdGhlIHJlYWRlcidzIGF0dGVudGlvbi4KKiAgICoqSW5jbHVkZWQgUmVtYWluaW5nIEluZm86KiogVG8gZnVsbHkgYW5zd2VyIHRoZSBwcm9tcHQuCgpUaGlzIHJlc3BvbnNlIHByb2R1Y2VzIGEgY29tcHJlaGVuc2l2ZSBhbmQgd2VsbC1mb3JtYXR0ZWQgcmVwb3J0IGJhc2VkIG9uIHRoZSBKU09OIGRhdGEgYW5kIGluY29ycG9yYXRlcyB0aGUgcmVxdWVzdGVkIGFuYWx5c2lzLiBMZXQgbWUga25vdyBpZiB5b3UnZCBsaWtlIG1lIHRvIHJlZmluZSBpdCBmdXJ0aGVyIQo=";export{g as default};
