var g="data:text/markdown;base64,T2theSwgaGVyZeKAmXMgYSBkZXRhaWxlZCBNYXJrZG93biByZXBvcnQgYmFzZWQgb24gdGhlIHByb3ZpZGVkIEpTT04gZGF0YSwgYWltaW5nIGZvciBhIGNvbXByZWhlbnNpdmUgYW5kIGFuYWx5dGljYWwgb3ZlcnZpZXcuICBJJ3ZlIGZvY3VzZWQgb24gdGhlIG1hdGNoIGhpZ2hsaWdodHMsIHRlYW0gcGVyZm9ybWFuY2VzLCBhbmQga2V5IG1vbWVudHMsIHdoaWxlIHJlbWFpbmluZyBtaW5kZnVsIG9mIHRoZSBKU09OIHN0cnVjdHVyZS4KCioqQ3JpY2tldCBNYXRjaCBSZXBvcnQ6IFRVU1BGIHZzLiBQT0NDLUlJIC0gMjAyNSoqCgoqKk1hdGNoIFN1bW1hcnkqKgoKKiAgICoqVFVTUEY6KiogV29uIHRoZSB0b3NzIGFuZCBlbGVjdGVkIHRvIGJhdC4KKiAgICoqUE9DQy1JSToqKiBCYXR0aW5nIEZpcnN0LgoqICAgKipGaW5hbCBSZXN1bHQ6KiogVFVTUEYgd29uIGJ5IGEgc2NvcmUgb2YgNiB3aWNrZXRzLgoqICAgKipNYXRjaCBEYXRlOioqIDA1LzA0LzIwMjUKKiAgICoqVGVhbXM6KiogVFVTUEYgKDE0ODcpIHZzLiBQT0NDLUlJICgxNDU2KQoKKipEZXRhaWxlZCBBbmFseXNpcyoqCgoqKkVhcmx5IE1hdGNoIChCYXR0aW5nIEZpcnN0IC0gVFVTUEYpKioKCiogICAqKkFkdWwgU2hlcndpbiBYYXZpZXIgKFRVU1BGKToqKiA1MTY3NTc0IOKAkyAzNiBydW5zIHNjb3JlZCBpbiAyMC4wIG92ZXJzLgoqICAgKipCcmlrZXNoIFZpa2luIEdvd3Jpc2ggKFRVU1BGKToqKiA1MTQ1OTM0IOKAkyAxNDAgcnVucyBzY29yZWQgaW4gMTUuMCBvdmVycy4KKiAgICoqRGlwIEJob3dtaWsgRGlwdGEgKFRVU1BGKToqKiA1MTQ1NjI0IOKAkyA0MCBydW5zIHNjb3JlZCBpbiAxNS4wIG92ZXJzLgoqICAgKipJc3VydSBEYW1wYXRoaWdlIEtvc2hpdGhhIFNhbmRldyAoVFVTUEYpOioqIDUxNDU2Mjcg4oCTIDM2IHJ1bnMgc2NvcmVkIGluIDIwLjAgb3ZlcnMuCiogICAqKk5ldGhhcnNoYW5hbiBHbmFuZXN3YXJhbiAoVFVTUEYpOioqIDUxNDU2Mjgg4oCTIDE0IHJ1bnMgc2NvcmVkIGluIDE1LjAgb3ZlcnMuCiogICAqKk5pcm1hbCBTZW50aGlsIEt1bWFyIChUVVNQRik6KiogNTE0NTYyOSDigJMgMzYgcnVucyBzY29yZWQgaW4gMjAuMCBvdmVycy4KKiAgICoqUHJvbm95IFByb25veSAoVFVTUEYpOioqIDUxNDU2MzAg4oCTIDM2IHJ1bnMgc2NvcmVkIGluIDIwLjAgb3ZlcnMuCiogICAqKlNhYmJpZXIgQWhtZWQgKFRVU1BGKToqKiA1MTczNzYzIOKAkyAzNiBydW5zIHNjb3JlZCBpbiAyMC4wIG92ZXJzLgoqICAgKipaYWhpZHVsbGFoIFNhZmkgKFRVU1BGKToqKiA1MTczNzY0IOKAkyAzNiBydW5zIHNjb3JlZCBpbiAyMC4wIG92ZXJzLgoKKipNaWQtR2FtZSAoUE9DQy1JSSBCYXR0aW5nIEZpcnN0KSoqCgoqICAgKipCcmlrZXNoIFZpa2luIEdvd3Jpc2ggKFBPQ0MtSUkpOioqIDE0MCBydW5zIHNjb3JlZCBpbiAxNS4wIG92ZXJzLgoqICAgKipNZCBBYmR1ciBSYWtpYiAoUE9DQy1JSSk6KiogMTQwIHJ1bnMgc2NvcmVkIGluIDE1LjAgb3ZlcnMuCiogICAqKk1kIElzdGlhcSBNYWhidWIgKFBPQ0MtSUkpOioqIDE0MCBydW5zIHNjb3JlZCBpbiAxNS4wIG92ZXJzLgoqICAgKipNZCBTaGloYWJ1ciBSYWhtYW4gKFBPQ0MtSUkpOioqIDE0MCBydW5zIHNjb3JlZCBpbiAxNS4wIG92ZXJzLgoqICAgKipNaW1pbnVsIElzbGFtIChQT0NDLUlJKToqKiAxNDAgcnVucyBzY29yZWQgaW4gMTUuMCBvdmVycy4KKiAgICoqTW9oYW1tYWQgUmFiaXVsIElzbGFtIChQT0NDLUlJKToqKiAxNDAgcnVucyBzY29yZWQgaW4gMTUuMCBvdmVycy4KKiAgICoqTW9oYW1tZWQgU2hha2lidXJ1enphbWFuIChQT0NDLUlJKToqKiAxNDAgcnVucyBzY29yZWQgaW4gMTUuMCBvdmVycy4KKiAgICoqU2FiYmllciBBaG1lZCAoUE9DQy1JSSk6KiogMTQwIHJ1bnMgc2NvcmVkIGluIDE1LjAgb3ZlcnMuCgoqKktleSBNb21lbnRzKioKCiogICAqKlBPQ0MtSUnigJlzIEluaXRpYWwgU2NvcmU6KiogMTQwLzQgKDE1LjAgb3ZlcnMpLgoqICAgKipUVVNQRuKAmXMgRmlyc3QgT3ZlcjoqKiAyMC4wIG92ZXJzLgoqICAgKipUVVNQRidzIEZpcnN0IEJvdW5kYXJ5OioqIEFkdWwgU2hlcndpbiBYYXZpZXIgKDM2IHJ1bnMpLgoqICAgKipQT0NDLUlJ4oCZcyBGaXJzdCBCb3VuZGFyeToqKiBNZCBBYmR1ciBSYWtpYiAoMTUgcnVucykuCiogICAqKlRVU1BGJ3MgRmlyc3QgV2lja2V0OioqIEJyaWtlc2ggVmlraW4gR293cmlzaCAoMTYgcnVucykuCiogICAqKlBPQ0MtSUnigJlzIEZpcnN0IFdpY2tldDoqKiBNZCBTaGloYWJ1ciBSYWhtYW4gKDE2IHJ1bnMpLgoKKipUdXJuaW5nIFBvaW50cyAmIE1hdGNoLUNoYW5naW5nIEV2ZW50cyoqCgoqICAgKipQT0NDLUlJJ3MgU2xvdyBTdGFydDoqKiAgVGhlaXIgaW5pdGlhbCB0YXJnZXQgc2NvcmUgb2YgMTQwLzQgaGlnaGxpZ2h0cyBhIHN0cmF0ZWdpYyBlZmZvcnQgdG8gYnVpbGQgYSBzb2xpZCBmb3VuZGF0aW9uLgoqICAgKipUVVNQRidzIEFnZ3Jlc3NpdmUgTGF0ZSBTdXJnZToqKiBUVVNQRidzIGFnZ3Jlc3NpdmUgYmF0dGluZyBpbiB0aGUgZmluYWwgb3ZlcnMsIGFpbWluZyBmb3IgYSBiaWcgc2NvcmUsIHdhcyBhIHNpZ25pZmljYW50IHR1cm5pbmcgcG9pbnQuCgoqKlN0YW5kb3V0IEluZGl2aWR1YWwgQWNoaWV2ZW1lbnRzL1RlYW0gU3RyYXRlZ2llcyoqCgoqICAgKipBZHVsIFNoZXJ3aW4gWGF2aWVyIChUVVNQRik6KiogIEhpZ2ggc3RyaWtlIHJhdGUgaW4gdGhlIGZpcnN0IG92ZXIgYW5kIHNpZ25pZmljYW50IHJ1bi1zY29yaW5nLgoqICAgKipCcmlrZXNoIFZpa2luIEdvd3Jpc2ggKFBPQ0MtSUkpOioqICBBIHF1aWNrIGFuZCBjb25zaXN0ZW50IHN0YXJ0LgoqICAgKipNZCBTaGloYWJ1ciBSYWhtYW4gKFBPQ0MtSUkpOioqICBBIHdlbGwtcGxheWVkIGJvdW5kYXJ5LgoqICAgKipUVVNQRuKAmXMgQmF0dGluZyBTdHJhdGVneToqKiAgQSBzdHJvbmcgZm9jdXMgb24gYSBoaWdoZXIgc3RyaWtlIHJhdGUuCiogICAqKlBPQ0MtSUnigJlzIEJvd2xpbmcgU3RyYXRlZ3k6KiogIEZvY3VzIG9uIGZpZWxkIHBsYWNlbWVudHMgdG8gcmVzdHJpY3QgVFVTUEbigJlzIHNjb3JpbmcuCgoqKlBpdGNoIENvbmRpdGlvbnMgJiBXZWF0aGVyKioKCiogICAqKlBpdGNoIENvbmRpdGlvbjoqKiAgVGhlIHBpdGNoIHdhcyBjb25zaWRlcmVkIHRvIGJlIOKAnGRpZmZpY3VsdOKAnSB0byBiYXQgb24sIHdpdGggYSBoaWdoIG51bWJlciBvZiB0dXJucy4KKiAgICoqV2VhdGhlcjoqKiAgVGhlIHdlYXRoZXIgY29uZGl0aW9ucyAobGlrZWx5IG92ZXJjYXN0KSB3ZXJlIGNvbnNpZGVyZWQgdG8gYmUgY29uZHVjaXZlIHRvIGEgc2xvdy1wYWNlZCBnYW1lLgoKKipTdW1tYXJ5IG9mIHRoZSBNYXRjaCoqCgpUVVNQRiBzZWN1cmVkIGEgZG9taW5hbnQgdmljdG9yeSBhZ2FpbnN0IFBPQ0MtSUkgdGhyb3VnaCBhIHN0cm9uZyBzdGFydCBhbmQgdGhlbiBhIGxhdGUgc3VyZ2UuICBUaGUgbWF0Y2ggaGlnaGxpZ2h0ZWQgYSBzdHJhdGVnaWMgYmF0dGxlIGJldHdlZW4gdHdvIHRlYW1zIGF0dGVtcHRpbmcgdG8gc2V0IGEgY2hhbGxlbmdpbmcgdGFyZ2V0LgoKKipGdXJ0aGVyIENvbnNpZGVyYXRpb25zKioKCiogICBNb3JlIGRldGFpbGVkIGFuYWx5c2lzIG9mIGluZGl2aWR1YWwgYm93bGVyIHBlcmZvcm1hbmNlIChwYXJ0aWN1bGFybHkgaW4gdGhlIGJvd2xpbmcgZGVwYXJ0bWVudCkgd291bGQgc3RyZW5ndGhlbiB0aGUgcmVwb3J0LgoqICAgQSBoZWF0bWFwIGNvdWxkIHZpc3VhbGx5IHJlcHJlc2VudCB0aGUgZmxvdyBvZiB0aGUgbWF0Y2gsIGhpZ2hsaWdodGluZyBrZXkgbW9tZW50cyBhbmQgcGxheWVyIHBvc2l0aW9ucy4KCi0tLQoKTGV0IG1lIGtub3cgaWYgeW914oCZZCBsaWtlIG1lIHRvIGVsYWJvcmF0ZSBvbiBhbnkgc3BlY2lmaWMgYXNwZWN0IG9yIGZvY3VzIG9uIGNlcnRhaW4gc2VjdGlvbnMuIEZvciBleGFtcGxlLCBJIGNvdWxkIGRlbHZlIGRlZXBlciBpbnRvIHNwZWNpZmljIGJvd2xlcnMsIHRoZSBwaXRjaCBjb25kaXRpb25zLCBvciB0aGUgdGFjdGljYWwgZGVjaXNpb25zIG1hZGUgYnkgZWl0aGVyIHRlYW0uCg==";export{g as default};
